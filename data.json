{"68e656b251e67e8358bef8483ab0d51c6619f3e7a1a9f0e75838d41ff368f728":"hello, world!","9e0cb4d4f97c432d4e71e5bbb3de715738939faedab8491c5a1aeedbb26a1039":"\"blameless'","4523540f1504cd17100c4835e85b7eefd49911580f8efff0599a8f283be6b9e3":"17","2103e97aa0218f5b7f693c48c54e57346de9fa3863d50ecc9f9741e3df638bd7":"(def x 20) x","41257a37295bf501eab3f6f4590abf97239d2d0ae72083c6bdd1f3dc5de9211f":"(div \"hello\")","c29395b8e590d25c34a2c194ef80c82fab72b97ba00588172331e0595691d1d7":"(div \"hiya\")","34dc20dfdb6edc5f6dce6dba0fe1d9543ed3f672c77f4d1c30e97865bbd331b1":"(react \"div\" \"hiya\")","8f434346648f6b96df89dda901c5176b10a6d83961dd3c1ac88b59b2dc327aa4":"hi","1d9a2be3e89d771f882b8aa7d6e24945ac181eb58932405e88442be1c5922b31":"{\"p\": 4}","4a46cfaf823b2b2a8dafc511f97edbdc34a43751784165bfcd2ab4ffe3279719":"(def import (lambda (urn)\n  (def data (node urn))\n  (def definitions (unserialize data))\n  (load definitions global)))","a38f0c09e5b745eb4e67beeabd278aacc159197ff0f4e6ae1ae0ac990b4f14da":"{\"p\": 4, \"song\": \"Heart of Glass\"}","c6a57991f18ec9097dfa1daf56efb6d2f59ffe0ddfdfd6fa29db9ad464a33bf8":"{\"song\": \"Heart of Glass\"}","837802cdee9f795cc971848e9882c6a050dd3da6706ada0ecc81f23acd2488e9":"{\"song\": \"Heart of Glass\", \"artist\": \"Blondie\"}","5370bece83a970761eedeb8800e3eaa6645028e76fd8757f3c1e1958560d1754":"(def import (lambda (urn)\n             (def data (node urn))\n             (def definitions (unserialize data))\n             (load definitions global)))\n\n\n(def edit\n  (block\n    (def save-node save)\n    (lambda (nodeUrn)\n      (def e (react)\n        Editor\n        {\"value\": (node nodeUrn)\n         \"ref\": (lambda (cm))\n           (def cli-fns {}\n             \"cm\": cm\n             \"save\": (lambda ())\n               (save-node nodeUrn (cm.getText))\n             \"done\": (lambda ())\n               (log context)\n               (unload context))\n           (def context (load cli-fns global))\n         \"options\": {}\n           \"lineNumbers\": true})\n      e)))","0a6afaa0a5bb976bd539b82c5dbf7231c0d525920e3fb295a41d7592f950933e":"(def import (lambda (urn))\n  (def data (node urn))\n  (def definitions (unserialize data))\n  (load definitions global))\n\n\n(def edit\n  (block\n    (def save-node save)\n    (lambda (nodeUrn)\n      (def e \n        (react\n           Editor\n           {\"value\": (node nodeUrn)\n            \"ref\": (lambda (cm)\n                     (def cli-fns {\"cm\": cm\n                                   \"save\": (lambda ()\n                                             (save-node nodeUrn (cm.getText)))\n                                   \"done\": (lambda ()\n                                             (log context)\n                                             (unload context))})\n                    (def context (load cli-fns global)))\n            \"options\": {\"lineNumbers\": true}}))\n      e)))\n","85072843602c3a9d4020e342005f8185884d2e85635f0f7c63168ca0f0d6d657":"(def import (lambda (urn))\n  (def data (node urn))\n  (def definitions (unserialize data))\n  (load definitions global))\n\n\n(def edit\n  (block\n    (def save-node save)\n    (lambda (nodeUrn)\n      (def e \n        (react\n           Editor\n           {\"value\": (node nodeUrn)\n            \"ref\": (lambda (cm)\n                     (def cli-fns {\"cm\": cm\n                                   \"save\": (lambda ()\n                                             (save-node nodeUrn (cm.getText)))\n                                   \"done\": (lambda ()\n                                             (log context)\n                                             (unload context))})\n                    (def context (load cli-fns global)))\n            \"options\": {\"lineNumbers\": true, \"matchBrackets\": true}}))\n      e)))\n","5a256383e1cc1b05dbee30c5a577673d051acb8840bb9bf9d9ce114f5862db55":"(def import (lambda (urn))\n  (def data (node urn))\n  (def definitions (unserialize data))\n  (load definitions global))\n\n\n(def edit\n  (block\n    (def save-node save)\n    (lambda (nodeUrn)\n      (def e \n        (react\n           Editor\n           {\"value\": (node nodeUrn)\n            \"ref\": (lambda (cm)\n                     (def cli-fns {\"cm\": cm\n                                   \"save\": (lambda ()\n                                             (save-node nodeUrn (cm.getText)))\n                                   \"done\": (lambda ()\n                                             (log context)\n                                             (unload context))})\n                    (def context (load cli-fns global)))\n            \"options\": {\"lineNumbers\": true \"matchBrackets\": true}}))\n      e)))\n","4ca580c3010dcf88fe55cd70605763c0322d18a70745de3bbd6c8b4edc050998":"(def import (lambda (urn))\n  (def data (node urn))\n  (def definitions (unserialize data))\n  (load definitions global))\n\n\n(def edit\n  (block\n    (def save-node save)\n    (lambda (nodeUrn)\n      (def e \n        (react\n           Editor\n           {\"value\": (node nodeUrn)\n            \"ref\": (lambda (cm)\n                     (def cli-fns {\"cm\": cm\n                                   \"paren-mode\": (lambda ()\n                                                    (cm.setMode \"paren\"))\n                                   \"indent-mode\": (lambda ()\n                                                   (cm.setMode \"indent\"))\n                                   \"save\": (lambda ()\n                                             (save-node nodeUrn (cm.getText)))\n                                   \"done\": (lambda ()\n                                             (log context)\n                                             (unload context))})\n                    (def context (load cli-fns global)))\n            \"options\": {\"lineNumbers\": true\n                        \"matchBrackets\": true}}))\n      e)))\n","5b1c1bfb40f631c5e9f84180057f3ef94d89101bca26fe6c9c33d85345d2ffff":"(def import (lambda (urn))\n  (def data (node urn))\n  (def definitions (unserialize data))\n  (load definitions global))\n\n\n(def edit\n  (block\n    (def save-node save)\n    (lambda (nodeUrn)\n      (react\n         Editor\n           {\"value\": (node nodeUrn)\n            \"ref\": (lambda (cm))\n                  (def cli-fns {\"cm\": cm\n                                \"paren-mode\": (lambda ()\n                                                 (cm.setMode \"paren\"))\n                                \"indent-mode\": (lambda ()\n                                                 (cm.setMode \"indent\"))\n                                \"save\": (lambda ()\n                                          (save-node nodeUrn (cm.getText)))\n                                \"done\": (lambda ()\n                                          (log context)\n                                          (unload context))})\n                 (def context (load cli-fns global))\n             \"options\": {\"lineNumbers\": true\n                         \"matchBrackets\": true}}))))\n      \n","e5f405cc467adca310193db244b51bdf425bc02fbf361ec2c96e9a61e4736017":"(def import (lambda (urn))\n  (def data (node urn))\n  (def definitions (unserialize data))\n  (load definitions global))\n\n\n(def edit\n  (block\n    (def save-node save)\n    (lambda (nodeUrn)\n      (react\n         Editor\n           {\"value\": (node nodeUrn)\n            \"ref\": (lambda (cm)\n                     (def cli-fns {\"cm\": cm\n                                   \"paren-mode\": (lambda ()\n                                                    (cm.setMode \"paren\"))\n                                   \"indent-mode\": (lambda ()\n                                                    (cm.setMode \"indent\"))\n                                   \"save\": (lambda ()\n                                             (save-node nodeUrn (cm.getText)))\n                                   \"done\": (lambda ()\n                                             (log context)\n                                             (unload context))})\n                    (def context (load cli-fns global)))\n             \"options\": {\"lineNumbers\": true\n                         \"matchBrackets\": true}}))))\n      \n","95a0bfbe7f4947fd1687897e14bf94282030747b76e52bade24459d0b7c16dfb":"{\"song\": \"Heart of Glass\", \"artist\": \"Blondie\", \"background\": \"white girl\"}","23cc61b6bd9bb43feb5c533df8117e2e45b47c09745880d9147ba7334ea3f5e0":"(def import (lambda (urn))\n  (def data (node urn))\n  (def definitions (unserialize data))\n  (load definitions global))\n\n\n(def edit\n  (block\n    (def save-node save)\n    (lambda (nodeUrn)\n      (react\n         Editor\n           {\"value\": (node nodeUrn)\n            \"ref\": (lambda (cm)\n                     (def cli-fns {\"cm\": cm\n                                   \"paren-mode\": (lambda ()\n                                                    (cm.setMode \"paren\"))\n                                   \"indent-mode\": (lambda ()\n                                                    (cm.setMode \"indent\"))\n                                   \"save\": (lambda ()\n                                             (save-node nodeUrn (cm.getText)))\n                                   \"done\": (lambda ()\n                                             (log context)\n                                             (unload context))})\n                    (def context (load cli-fns global)))\n             \"options\": {\"lineNumbers\": true\n                         \"matchBrackets\": true\n                         \"extraKeys\": {\"F11\": (lambda (cm)\n                                                 (cm.setOption \"fullScreen\" (not (cm.getOption \"fullScreen\"))))\n                                       \"Esc\": (lambda (cm)\n                                                (cm.setOption \"fullScreen\" false))}}}))))\n","30c4b57f1f04f135dabc37f8f8f97d0c520bff545ba0a189fa432f3e42d2764f":"(def import (lambda (urn))\n  (def data (node urn))\n  (def definitions (unserialize data))\n  (load definitions global))\n\n\n(def edit\n  (block\n    (def save-node save)\n    (lambda (nodeUrn)\n      (react\n         Editor\n           {\"value\": (node nodeUrn)\n            \"ref\": (lambda (cm)\n                     (def cli-fns {\"cm\": cm\n                                   \"paren-mode\": (lambda ()\n                                                    (cm.setMode \"paren\"))\n                                   \"indent-mode\": (lambda ()\n                                                    (cm.setMode \"indent\"))\n                                   \"save\": (lambda ()\n                                             (save-node nodeUrn (cm.getText)))\n                                   \"done\": (lambda ()\n                                             (log context)\n                                             (unload context))})\n                    (def context (load cli-fns global)))\n             \"options\": {\"lineNumbers\": true\n                         \"matchBrackets\": true\n                         \"extraKeys\": {\"F11\": (lambda (_)\n                                                 (cm.setOption \"fullScreen\" (not (cm.getOption \"fullScreen\"))))\n                                       \"Esc\": (lambda (_)\n                                                (cm.setOption \"fullScreen\" false))}}}))))\n","88175a8ad70ba56ccb6ae48ae9c4bd2e54a6d69c1592f1b18c84acde47aee479":"(def import (lambda (urn))\n  (def data (node urn))\n  (def definitions (unserialize data))\n  (load definitions global))\n\n\n(def edit\n  (block\n    (def save-node save)\n    (lambda (nodeUrn)\n      (react\n         Editor\n           {\"value\": (node nodeUrn)\n            \"ref\": (lambda (cm)\n                     (def cli-fns {\"cm\": cm\n                                   \"paren-mode\": (lambda ()\n                                                    (cm.setMode \"paren\"))\n                                   \"indent-mode\": (lambda ()\n                                                    (cm.setMode \"indent\"))\n                                   \"save\": (lambda ()\n                                             (save-node nodeUrn (cm.getText)))\n                                   \"done\": (lambda ()\n                                             (log context)\n                                             (unload context))})\n                    (def context (load cli-fns global)))\n             \"options\": {\"lineNumbers\": true\n                         \"matchBrackets\": true\n                         \"extraKeys\": {\"F11\": (lambda ()\n                                                 (cm.setOption \"fullScreen\" (not (cm.getOption \"fullScreen\"))))\n                                       \"Esc\": (lambda (_)\n                                                (cm.setOption \"fullScreen\" false))}}}))))\n","4e663c151325dc6163a8c55b2db9b9b5c67854af960b1eede6241cd8f2683a27":"(def import (lambda (urn))\n  (def data (node urn))\n  (def definitions (unserialize data))\n  (load definitions global))\n\n\n(def edit\n  (block\n    (def save-node save)\n    (lambda (nodeUrn)\n      (react\n         Editor\n           {\"value\": (node nodeUrn)\n            \"ref\": (lambda (cm)\n                     (def save (lambda ()\n                                  (save-node nodeUrn (cm.getText))))\n                     (def cli-fns {\"cm\": cm\n                                   \"paren-mode\": (lambda ()\n                                                    (cm.setMode \"paren\"))\n                                   \"indent-mode\": (lambda ()\n                                                    (cm.setMode \"indent\"))\n                                   \"save\": save\n                                   \"done\": (lambda ()\n                                             (log context)\n                                             (unload context))})\n                    (def context (load cli-fns global)))\n             \"options\": {\"lineNumbers\": true\n                         \"matchBrackets\": true\n                         \"extraKeys\": {\"F11\": (lambda (_)\n                                                 (cm.setOption \"fullScreen\" (not (cm.getOption \"fullScreen\"))))\n                                       \"Esc\": (lambda (_)\n                                                (cm.setOption \"fullScreen\" false))\n                                       \"Ctrl-S\": save}}}))))\n","5e3c59211f04ee493bd76a2faf98ae761eb0ad65160d7810f910416d50fa57dd":"(def import (lambda (urn))\n  (def data (node urn))\n  (def definitions (unserialize data))\n  (load definitions global))\n\n\n(def edit\n  (block\n    (def save-node save)\n    (lambda (nodeUrn)\n      (react\n         Editor\n           {\"value\": (node nodeUrn)\n            \"ref\": (lambda (cm)\n                     (def save (lambda ()\n                                  (log \"saved!)\n                                  (save-node nodeUrn (cm.getText))))\n                     (def cli-fns {\"cm\": cm\n                                   \"paren-mode\": (lambda ()\n                                                    (cm.setMode \"paren\"))\n                                   \"indent-mode\": (lambda ()\n                                                    (cm.setMode \"indent\"))\n                                   \"save\": save\n                                   \"done\": (lambda ()\n                                             (log context)\n                                             (unload context))})\n                    (def context (load cli-fns global)))\n             \"options\": {\"lineNumbers\": true\n                         \"matchBrackets\": true\n                         \"extraKeys\": {\"F11\": (lambda (_)\n                                                 (cm.setOption \"fullScreen\" (not (cm.getOption \"fullScreen\"))))\n                                       \"Esc\": (lambda (_)\n                                                (cm.setOption \"fullScreen\" false))\n                                       \"Ctrl-S\": save}}}))))\n","52e24987338c6b39a130fe4173585579ca8bc7db536a552c8c22adce5a4eb6cd":"(def import (lambda (urn))\n  (def data (node urn))\n  (def definitions (unserialize data))\n  (load definitions global))\n\n\n(def edit\n  (block\n    (def save-node save)\n    (lambda (nodeUrn)\n      (react\n         Editor\n           {\"value\": (node nodeUrn)\n            \"ref\": (lambda (cm)\n                     (def save (lambda ()\n                                  (log \"saved!\")\n                                  (save-node nodeUrn (cm.getText))))\n                     (def cli-fns {\"cm\": cm\n                                   \"paren-mode\": (lambda ()\n                                                    (cm.setMode \"paren\"))\n                                   \"indent-mode\": (lambda ()\n                                                    (cm.setMode \"indent\"))\n                                   \"save\": save\n                                   \"done\": (lambda ()\n                                             (log context)\n                                             (unload context))})\n                    (def context (load cli-fns global)))\n             \"options\": {\"lineNumbers\": true\n                         \"matchBrackets\": true\n                         \"extraKeys\": {\"F11\": (lambda (_)\n                                                 (cm.setOption \"fullScreen\" (not (cm.getOption \"fullScreen\"))))\n                                       \"Esc\": (lambda (_)\n                                                (cm.setOption \"fullScreen\" false))\n                                       \"Ctrl-S\": save}}}))))\n","4d6b800eaca0ba517862c9e22c6ac83e6ebfc0eeff9aa497c53cd861d6b6ae12":"(def import (lambda (urn))\n  (def data (node urn))\n  (def definitions (unserialize data))\n  (load definitions global))\n\n\n(def edit\n  (block\n    (def save-node save)\n    (lambda (nodeUrn)\n      (react\n         Editor\n           {\"value\": (node nodeUrn)\n            \"ref\": (lambda (cm)\n                     (def save (lambda ()\n                                  (log \"saved!\")\n                                  (save-node nodeUrn (cm.getText))))\n                     (def cli-fns {\"cm\": cm\n                                   \"paren-mode\": (lambda ()\n                                                    (cm.setMode \"paren\"))\n                                   \"indent-mode\": (lambda ()\n                                                    (cm.setMode \"indent\"))\n                                   \"save\": save\n                                   \"done\": (lambda ()\n                                             (log context)\n                                             (unload context))})\n                    (def context (load cli-fns global)))\n             \"options\": {\"lineNumbers\": true\n                         \"matchBrackets\": true\n                         \"extraKeys\": {\"F11\": (lambda (_)\n                                                 (cm.setOption \"fullScreen\" (not (cm.getOption \"fullScreen\"))))\n                                       \"Esc\": (lambda (_)\n                                                (cm.setOption \"fullScreen\" false))\n                                       \"Cmd-S\": save}}}))))\n","b6b4cf9308460b386f7cfc710bc6a0acb0a400b8536d52dcad892a8d83694920":"{\"song\": \"Heart of Glass\", \"artist\": \"Blondie\", \"bacund\": \"white girl\"}","524e6ab53026c6ee20479951f04ce7dd8741784a22840a459f7299f305e2eb31":"(def import (lambda (urn))\n  (def data (node urn))\n  (def definitions (unserialize data))\n  (load definitions global))\n\n\n(def edit\n  (block\n    (def save-node save)\n    (def save (lambda (cm nodeUrn)\n                (log \"saved ^\")\n                (save-node nodeUrn (cm.getText))))\n    (lambda (nodeUrn)\n      (react\n         Editor\n           {\"value\": (node nodeUrn)\n            \"ref\": (lambda (cm)\n                     (def cli-fns {\"cm\": cm\n                                   \"paren-mode\": (lambda ()\n                                                    (cm.setMode \"paren\"))\n                                   \"indent-mode\": (lambda ()\n                                                    (cm.setMode \"indent\"))\n                                   \"save\": (lambda () (save cm nodeUrn))\n                                   \"done\": (lambda ()\n                                             (log context)\n                                             (unload context))})\n                    (def context (load cli-fns global)))\n             \"options\": {\"lineNumbers\": true\n                         \"matchBrackets\": true\n                         \"extraKeys\": {\"F11\": (lambda (_)\n                                                (cm.setOption \"fullScreen\" (not (cm.getOption \"fullScreen\"))))\n                                       \"Esc\": (lambda (_)\n                                                (cm.setOption \"fullScreen\" false))\n                                       \"Cmd-S\": (lambda (_) (alert \"wat\") (log \"how\") (save cm nodeUrn))}}}))))\n","bea14ff69090b9a295ffed6c610f16694672c09b1ed5ed72cca711e3b4607b9f":"(def import (lambda (urn))\n  (def data (node urn))\n  (def definitions (unserialize data))\n  (load definitions global))\n\n\n(def edit\n  (block\n    (def save-node save)\n    (def save (lambda (cm nodeUrn)\n                (log \"saved ^\")\n                (save-node nodeUrn (cm.getText))))\n    (lambda (nodeUrn)\n      (react\n         Editor\n           {\"value\": (node nodeUrn)\n            \"ref\": (lambda (cm)\n                     (def cli-fns {\"cm\": cm\n                                   \"paren-mode\": (lambda ()\n                                                    (cm.setMode \"paren\"))\n                                   \"indent-mode\": (lambda ()\n                                                    (cm.setMode \"indent\"))\n                                   \"save\": (lambda () (save cm nodeUrn))\n                                   \"done\": (lambda ()\n                                             (log context)\n                                             (unload context))})\n                    (def context (load cli-fns global)))\n             \"options\": {\"lineNumbers\": true\n                         \"matchBrackets\": true\n                         \"extraKeys\": {\"F11\": (lambda (_)\n                                                (cm.setOption \"fullScreen\" (not (cm.getOption \"fullScreen\"))))\n                                       \"Esc\": (lambda (_)\n                                                (cm.setOption \"fullScreen\" false))\n                                       \"Cmd-S\": (lambda (_) (save cm nodeUrn))}}}))))\n","b00907f841e0deeafa064bb9576b0eced322bb5ec14b97149a6a0c5c6a639bf4":"(def import (lambda (urn))\n  (def data (node urn))\n  (def definitions (unserialize data))\n  (load definitions global))\n\n\n(def edit\n  (block\n    (def save-node save)\n    (def save (lambda (cm nodeUrn)\n                (save-node nodeUrn (cm.getText))))\n    (lambda (nodeUrn)\n      (react\n         Editor\n           {\"value\": (node nodeUrn)\n            \"ref\": (lambda (cm)\n                     (def cli-fns {\"cm\": cm\n                                   \"paren-mode\": (lambda ()\n                                                    (cm.setMode \"paren\"))\n                                   \"indent-mode\": (lambda ()\n                                                    (cm.setMode \"indent\"))\n                                   \"save\": (lambda () (save cm nodeUrn))\n                                   \"done\": (lambda ()\n                                             (log context)\n                                             (unload context))})\n                    (def context (load cli-fns global)))\n             \"options\": {\"lineNumbers\": true\n                         \"matchBrackets\": true\n                         \"extraKeys\": {\"F11\": (lambda (_)\n                                                (cm.setOption \"fullScreen\" (not (cm.getOption \"fullScreen\"))))\n                                       \"Esc\": (lambda (_)\n                                                (cm.setOption \"fullScreen\" false))\n                                       \"Cmd-S\": (lambda (_) (save cm nodeUrn))}}}))))\n","d0509edabefa57b42af50097825378722957f39ee0646b0d070d8dd0c8ed8e86":"{\"song\": \"Heart of Glass\", \"artist\": \"B londie\", \"bacund\": \"white girl\"}","7ba603f14e011227031e1b883964f73d42b2bc5452ec9e1aed4e78ad7878d2fe":"(def import\n  (lambda (urn)         \n    (def data (node urn))\n    (def definitions (unserialize data))\n    (load definitions global)))\n\n\n(def edit\n  (block\n    (def save-node save)\n    (def save (lambda (cm nodeUrn)\n                (save-node nodeUrn (cm.getText))))\n    (lambda (nodeUrn)\n      (react\n         Editor\n           {\"value\": (node nodeUrn)\n            \"ref\": (lambda (cm)\n                     (def cli-fns {\"cm\": cm\n                                   \"paren-mode\": (lambda ()\n                                                    (cm.setMode \"paren\"))\n                                   \"indent-mode\": (lambda ()\n                                                    (cm.setMode \"indent\"))\n                                   \"save\": (lambda () (save cm nodeUrn))\n                                   \"done\": (lambda ()\n                                             (log context)\n                                             (unload context))})\n                    (def context (load cli-fns global)))\n             \"options\": {\"lineNumbers\": true\n                         \"matchBrackets\": true\n                         \"extraKeys\": {\"F11\": (lambda (_)\n                                                (cm.setOption \"fullScreen\" (not (cm.getOption \"fullScreen\"))))\n                                       \"Esc\": (lambda (_)\n                                                (cm.setOption \"fullScreen\" false))\n                                       \"Cmd-S\": (lambda (_) (save cm nodeUrn))}}}))))\n","b6c8c046c368581d79680bd879500293374254ad6eb000c943db181fe1b0c9ee":"(def import\n  (lambda (urn)         \n    (def data (node urn))\n    (def definitions (unserialize data))\n    (load definitions global)))\n\n(def list-nodes\n  (lambda ()\n    (nodes \"robert\")))\n   \n\n(def edit\n  (block\n    (def save-node save)\n    (def save (lambda (cm nodeUrn)\n                (save-node nodeUrn (cm.getText))))\n    (lambda (nodeUrn)\n      (react\n         Editor\n           {\"value\": (node nodeUrn)\n            \"ref\": (lambda (cm)\n                     (def cli-fns {\"cm\": cm\n                                   \"paren-mode\": (lambda ()\n                                                    (cm.setMode \"paren\"))\n                                   \"indent-mode\": (lambda ()\n                                                    (cm.setMode \"indent\"))\n                                   \"save\": (lambda () (save cm nodeUrn))\n                                   \"done\": (lambda ()\n                                             (log context)\n                                             (unload context))})\n                    (def context (load cli-fns global)))\n             \"options\": {\"lineNumbers\": true\n                         \"matchBrackets\": true\n                         \"extraKeys\": {\"F11\": (lambda (_)\n                                                (cm.setOption \"fullScreen\" (not (cm.getOption \"fullScreen\"))))\n                                       \"Esc\": (lambda (_)\n                                                (cm.setOption \"fullScreen\" false))\n                                       \"Cmd-S\": (lambda (_) (save cm nodeUrn))}}}))))\n","c60d67326a427bd0134f093f18898b1050ec9be82337387682f0e4e272e3eba2":"(def import\n  (lambda (urn)         \n    (def data (node urn))\n    (def definitions (unserialize data))\n    (load definitions global)))\n\n(def list-nodes\n  (lambda ()\n    (nodes \"robert\")))\n   \n(def edit\n  (block\n    (def save-node save)\n    (def save (lambda (cm nodeUrn)\n                (save-node nodeUrn (cm.getText))))\n    (lambda (nodeUrn)\n      (react\n         Editor\n           {\"value\": (node nodeUrn)\n            \"ref\": (lambda (cm)\n                     (def cli-fns {\"cm\": cm\n                                   \"paren-mode\": (lambda ()\n                                                    (cm.setMode \"paren\"))\n                                   \"indent-mode\": (lambda ()\n                                                    (cm.setMode \"indent\"))\n                                   \"save\": (lambda () (save cm nodeUrn))\n                                   \"done\": (lambda ()\n                                             (log context)\n                                             (unload context))})\n                    (def context (load cli-fns global)))\n             \"options\": {\"lineNumbers\": true\n                         \"matchBrackets\": true\n                         \"extraKeys\": {\"F11\": (lambda (_)\n                                                (cm.setOption \"fullScreen\" (not (cm.getOption \"fullScreen\"))))\n                                       \"Esc\": (lambda (_)\n                                                (cm.setOption \"fullScreen\" false))\n                                       \"Cmd-S\": (lambda (_) (save cm nodeUrn))}}}))))\n","572f8cdfa6f8b2cdbb2b2d6de98235bae02c72f980789a104adfa0e387bf2d50":"(def import-json\n  (lambda (urn)         \n    (def data (node urn))\n    (def definitions (unserialize data))\n    (load definitions global)))\n\n(def list-nodes\n  (lambda ()\n    (nodes \"robert\")))\n   \n(def edit\n  (block\n    (def save-node save)\n    (def save (lambda (cm nodeUrn)\n                (save-node nodeUrn (cm.getText))))\n    (lambda (nodeUrn)\n      (react\n         Editor\n           {\"value\": (node nodeUrn)\n            \"ref\": (lambda (cm)\n                     (def cli-fns {\"cm\": cm\n                                   \"paren-mode\": (lambda ()\n                                                    (cm.setMode \"paren\"))\n                                   \"indent-mode\": (lambda ()\n                                                    (cm.setMode \"indent\"))\n                                   \"save\": (lambda () (save cm nodeUrn))\n                                   \"done\": (lambda ()\n                                             (log context)\n                                             (unload context))})\n                    (def context (load cli-fns global)))\n             \"options\": {\"lineNumbers\": true\n                         \"matchBrackets\": true\n                         \"extraKeys\": {\"F11\": (lambda (_)\n                                                (cm.setOption \"fullScreen\" (not (cm.getOption \"fullScreen\"))))\n                                       \"Esc\": (lambda (_)\n                                                (cm.setOption \"fullScreen\" false))\n                                       \"Cmd-S\": (lambda (_) (save cm nodeUrn))}}}))))\n","111ba6ceea2a8732307068cc26f1ecdf7fe0ac804859cc5ae3ea6d602f29c85e":"(def import-lisp\n  (lambda (node-urn)\n     (eval (node node-urn))))\n\n(def import-json\n  (lambda (urn)         \n    (def data (node urn))\n    (def definitions (unserialize data))\n    (load definitions global)))\n\n(def list-nodes\n  (lambda ()\n    (nodes \"robert\")))\n   \n(def edit\n  (block\n    (def save-node save)\n    (def save (lambda (cm nodeUrn)\n                (save-node nodeUrn (cm.getText))))\n    (lambda (nodeUrn)\n      (react\n         Editor\n           {\"value\": (node nodeUrn)\n            \"ref\": (lambda (cm)\n                     (def cli-fns {\"cm\": cm\n                                   \"paren-mode\": (lambda ()\n                                                    (cm.setMode \"paren\"))\n                                   \"indent-mode\": (lambda ()\n                                                    (cm.setMode \"indent\"))\n                                   \"save\": (lambda () (save cm nodeUrn))\n                                   \"done\": (lambda ()\n                                             (log context)\n                                             (unload context))})\n                    (def context (load cli-fns global)))\n             \"options\": {\"lineNumbers\": true\n                         \"matchBrackets\": true\n                         \"extraKeys\": {\"F11\": (lambda (_)\n                                                (cm.setOption \"fullScreen\" (not (cm.getOption \"fullScreen\"))))\n                                       \"Esc\": (lambda (_)\n                                                (cm.setOption \"fullScreen\" false))\n                                       \"Cmd-S\": (lambda (_) (save cm nodeUrn))}}}))))\n","1a493a9778f0b5ba9a4a2c7ca3974c96c84542a286d1335b0a45d7a5bd0384ee":"(def import-lisp\n  (lambda (node_urn)\n     (eval (node node_urn))))\n\n(def import-json\n  (lambda (urn)         \n    (def data (node urn))\n    (def definitions (unserialize data))\n    (load definitions global)))\n\n(def list-nodes\n  (lambda ()\n    (nodes \"robert\")))\n   \n(def edit\n  (block\n    (def save-node save)\n    (def save (lambda (cm nodeUrn)\n                (save-node nodeUrn (cm.getText))))\n    (lambda (nodeUrn)\n      (react\n         Editor\n           {\"value\": (node nodeUrn)\n            \"ref\": (lambda (cm)\n                     (def cli-fns {\"cm\": cm\n                                   \"paren-mode\": (lambda ()\n                                                    (cm.setMode \"paren\"))\n                                   \"indent-mode\": (lambda ()\n                                                    (cm.setMode \"indent\"))\n                                   \"save\": (lambda () (save cm nodeUrn))\n                                   \"done\": (lambda ()\n                                             (log context)\n                                             (unload context))})\n                    (def context (load cli-fns global)))\n             \"options\": {\"lineNumbers\": true\n                         \"matchBrackets\": true\n                         \"extraKeys\": {\"F11\": (lambda (_)\n                                                (cm.setOption \"fullScreen\" (not (cm.getOption \"fullScreen\"))))\n                                       \"Esc\": (lambda (_)\n                                                (cm.setOption \"fullScreen\" false))\n                                       \"Cmd-S\": (lambda (_) (save cm nodeUrn))}}}))))\n","0dab414821403ac795c94d6b1597659f083b6e7e6b611d6ace27ac2c1678bb00":"(def import_lisp\n  (lambda (node_urn)\n     (eval (node node_urn))))\n\n(def import_json\n  (lambda (urn)         \n    (def data (node urn))\n    (def definitions (unserialize data))\n    (load definitions global)))\n\n(def list_nodes\n  (lambda ()\n    (nodes \"robert\")))\n   \n(def edit\n  (block\n    (def save-node save)\n    (def save (lambda (cm nodeUrn)\n                (save-node nodeUrn (cm.getText))))\n    (lambda (nodeUrn)\n      (react\n         Editor\n           {\"value\": (node nodeUrn)\n            \"ref\": (lambda (cm)\n                     (def cli-fns {\"cm\": cm\n                                   \"paren-mode\": (lambda ()\n                                                    (cm.setMode \"paren\"))\n                                   \"indent-mode\": (lambda ()\n                                                    (cm.setMode \"indent\"))\n                                   \"save\": (lambda () (save cm nodeUrn))\n                                   \"done\": (lambda ()\n                                             (log context)\n                                             (unload context))})\n                    (def context (load cli-fns global)))\n             \"options\": {\"lineNumbers\": true\n                         \"matchBrackets\": true\n                         \"extraKeys\": {\"F11\": (lambda (_)\n                                                (cm.setOption \"fullScreen\" (not (cm.getOption \"fullScreen\"))))\n                                       \"Esc\": (lambda (_)\n                                                (cm.setOption \"fullScreen\" false))\n                                       \"Cmd-S\": (lambda (_) (save cm nodeUrn))}}}))))\n","1de3e1889e582d9ecdd8aea74ea257a6fca8cb9ac8de224aa8db0175eb380fed":"(def import_lisp\n  (lambda! (node_urn)\n     (eval (node node_urn))))\n\n(def import_json\n  (lambda (urn)         \n    (def data (node urn))\n    (def definitions (unserialize data))\n    (load definitions global)))\n\n(def list_nodes\n  (lambda ()\n    (nodes \"robert\")))\n   \n(def edit\n  (block\n    (def save-node save)\n    (def save (lambda (cm nodeUrn)\n                (save-node nodeUrn (cm.getText))))\n    (lambda (nodeUrn)\n      (react\n         Editor\n           {\"value\": (node nodeUrn)\n            \"ref\": (lambda (cm)\n                     (def cli-fns {\"cm\": cm\n                                   \"paren-mode\": (lambda ()\n                                                    (cm.setMode \"paren\"))\n                                   \"indent-mode\": (lambda ()\n                                                    (cm.setMode \"indent\"))\n                                   \"save\": (lambda () (save cm nodeUrn))\n                                   \"done\": (lambda ()\n                                             (log context)\n                                             (unload context))})\n                    (def context (load cli-fns global)))\n             \"options\": {\"lineNumbers\": true\n                         \"matchBrackets\": true\n                         \"extraKeys\": {\"F11\": (lambda (_)\n                                                (cm.setOption \"fullScreen\" (not (cm.getOption \"fullScreen\"))))\n                                       \"Esc\": (lambda (_)\n                                                (cm.setOption \"fullScreen\" false))\n                                       \"Cmd-S\": (lambda (_) (save cm nodeUrn))}}}))))\n","a133c5b3a7dd94bdc7a67f80c192fa95914779060bbbfe1455a269c6c43974c9":"(def import_lisp\n  (lambda! (node_urn)\n     (eval (node node_urn))))\n\n(def import_json\n  (lambda (urn)         \n    (def data (node urn))\n    (def definitions (unserialize data))\n    (load definitions global)))\n\n(def list-nodes\n  (lambda ()\n    (nodes \"robert\")))\n   \n(def edit\n  (block\n    (def save-node save)\n    (def save (lambda (cm nodeUrn)\n                (save-node nodeUrn (cm.getText))))\n    (lambda (nodeUrn)\n      (react\n         Editor\n           {\"value\": (node nodeUrn)\n            \"ref\": (lambda (cm)\n                     (def cli-fns {\"cm\": cm\n                                   \"paren-mode\": (lambda ()\n                                                    (cm.setMode \"paren\"))\n                                   \"indent-mode\": (lambda ()\n                                                    (cm.setMode \"indent\"))\n                                   \"save\": (lambda () (save cm nodeUrn))\n                                   \"done\": (lambda ()\n                                             (log context)\n                                             (unload context))})\n                    (def context (load cli-fns global)))\n             \"options\": {\"lineNumbers\": true\n                         \"matchBrackets\": true\n                         \"extraKeys\": {\"F11\": (lambda (_)\n                                                (cm.setOption \"fullScreen\" (not (cm.getOption \"fullScreen\"))))\n                                       \"Esc\": (lambda (_)\n                                                (cm.setOption \"fullScreen\" false))\n                                       \"Cmd-S\": (lambda (_) (save cm nodeUrn))}}}))))\n","4949c13ea34da97309b6b1dca9f9e223d74ef414171b4882cd26a707ed3bc473":"(def import-lisp\n  (lambda! (node_urn)\n     (eval (node node_urn))))\n\n(def import-json\n  (lambda (urn)         \n    (def data (node urn))\n    (def definitions (unserialize data))\n    (load definitions global)))\n\n(def list-nodes\n  (lambda ()\n    (nodes \"robert\")))\n   \n(def edit\n  (block\n    (def save-node save)\n    (def save (lambda (cm nodeUrn)\n                (save-node nodeUrn (cm.getText))))\n    (lambda (nodeUrn)\n      (react\n         Editor\n           {\"value\": (node nodeUrn)\n            \"ref\": (lambda (cm)\n                     (def cli-fns {\"cm\": cm\n                                   \"paren-mode\": (lambda ()\n                                                    (cm.setMode \"paren\"))\n                                   \"indent-mode\": (lambda ()\n                                                    (cm.setMode \"indent\"))\n                                   \"save\": (lambda () (save cm nodeUrn))\n                                   \"done\": (lambda ()\n                                             (log context)\n                                             (unload context))})\n                    (def context (load cli-fns global)))\n             \"options\": {\"lineNumbers\": true\n                         \"matchBrackets\": true\n                         \"extraKeys\": {\"F11\": (lambda (_)\n                                                (cm.setOption \"fullScreen\" (not (cm.getOption \"fullScreen\"))))\n                                       \"Esc\": (lambda (_)\n                                                (cm.setOption \"fullScreen\" false))\n                                       \"Cmd-S\": (lambda (_) (save cm nodeUrn))}}}))))\n","148de9c5a7a44d19e56cd9ae1a554bf67847afb0c58f6e12fa29ac7ddfca9940":"p","238b86ad717d9145580f241ce81228c45aba745728186213ca88e16ae96cec8f":"1. Split up startup-script into other nodes.\n","a6be29eee43f0651e326d52ddd5a66bf5cbb1234ee2cd10dae7319b859c0c44e":"1. Make \"edit\" able to create nodes.\n2. Split up startup-script into other nodes.\n","d6684abb89bb1a55b20397b0adaeb8e40c7d328a13a19246b411163c01fd9451":"(def import-lisp\n  (lambda! (node_urn)\n     (eval (node node_urn))))\n\n(def import-json\n  (lambda (urn)         \n    (def data (node urn))\n    (def definitions (unserialize data))\n    (load definitions global)))\n\n(def list-nodes\n  (lambda ()\n    (nodes \"robert\")))\n   \n(def edit\n  (block\n    (def save-node save)\n    (def save (lambda (cm nodeUrn)\n                (save-node nodeUrn (cm.getText))))\n    (lambda (nodeUrn)\n      (def text\n        (or (node nodeUrn)\n            \"\"))\n      (react\n         Editor\n           {\"value\": text\n            \"ref\": (lambda (cm)\n                     (def cli-fns {\"cm\": cm\n                                   \"paren-mode\": (lambda ()\n                                                    (cm.setMode \"paren\"))\n                                   \"indent-mode\": (lambda ()\n                                                    (cm.setMode \"indent\"))\n                                   \"save\": (lambda () (save cm nodeUrn))\n                                   \"done\": (lambda ()\n                                             (log context)\n                                             (unload context))})\n                    (def context (load cli-fns global)))\n             \"options\": {\"lineNumbers\": true\n                         \"matchBrackets\": true\n                         \"extraKeys\": {\"F11\": (lambda (_)\n                                                (cm.setOption \"fullScreen\" (not (cm.getOption \"fullScreen\"))))\n                                       \"Esc\": (lambda (_)\n                                                (cm.setOption \"fullScreen\" false))\n                                       \"Cmd-S\": (lambda (_) (save cm nodeUrn))}}}))))\n","98ac754ab446c62649a79431e25387728a56bc55e48798677384fd0d052c39dc":"(def import-lisp\n  (lambda! (node_urn)\n     (eval (node node_urn))))\n\n(def import-json\n  (lambda (urn)         \n    (def data (node urn))\n    (def definitions (unserialize data))\n    (load definitions global)))\n\n(def list-nodes\n  (lambda ()\n    (nodes \"robert\")))\n   \n(def edit\n  (block\n    (def save-node save)\n    (def save (lambda (cm nodeUrn)\n                (save-node nodeUrn (cm.getText))))\n    (lambda (nodeUrn)\n      (def text\n        (or (node nodeUrn)\n            \"\"))\n      (log text)\n      (log type text)\n      (react\n         Editor\n           {\"value\": text\n            \"ref\": (lambda (cm)\n                     (def cli-fns {\"cm\": cm\n                                   \"paren-mode\": (lambda ()\n                                                    (cm.setMode \"paren\"))\n                                   \"indent-mode\": (lambda ()\n                                                    (cm.setMode \"indent\"))\n                                   \"save\": (lambda () (save cm nodeUrn))\n                                   \"done\": (lambda ()\n                                             (log context)\n                                             (unload context))})\n                    (def context (load cli-fns global)))\n             \"options\": {\"lineNumbers\": true\n                         \"matchBrackets\": true\n                         \"extraKeys\": {\"F11\": (lambda (_)\n                                                (cm.setOption \"fullScreen\" (not (cm.getOption \"fullScreen\"))))\n                                       \"Esc\": (lambda (_)\n                                                (cm.setOption \"fullScreen\" false))\n                                       \"Cmd-S\": (lambda (_) (save cm nodeUrn))}}}))))\n","63c75ff990c6f2545e4ca5469fc3a2a6b2f1a78bd3be25f6ce89d3d346367d71":"(def import-lisp\n  (lambda! (node_urn)\n     (eval (node node_urn))))\n\n(def import-json\n  (lambda (urn)         \n    (def data (node urn))\n    (def definitions (unserialize data))\n    (load definitions global)))\n\n(def list-nodes\n  (lambda ()\n    (nodes \"robert\")))\n\n(import-lisp \"startup-script-edit\")\n","d8f7c48dfeabdf03e1f7f1634235aac155498c54ba26779c67e202c565763890":"(def hello \"goodbye\")\n","599c6acae6dcac7097e0f0f513405d2f1767b9247a0cfe82f8ae9feb97e6bdda":"(def edit2\n  (block\n    (def save-node save)\n    (def save (lambda (cm nodeUrn)\n                (save-node nodeUrn (cm.getText))))\n    (lambda (nodeUrn)\n      (def text\n        (or (node nodeUrn)\n            \"\"))\n      (react\n         Editor\n           {\"value\": text\n            \"ref\": (lambda (cm)\n                     (def cli-fns {\"cm\": cm\n                                   \"paren-mode\": (lambda ()\n                                                    (cm.setMode \"paren\"))\n                                   \"indent-mode\": (lambda ()\n                                                    (cm.setMode \"indent\"))\n                                   \"save\": (lambda () (save cm nodeUrn))\n                                   \"done\": (lambda ()\n                                             (log context)\n                                             (unload context))})\n                    (def context (load cli-fns global)))\n             \"options\": {\"lineNumbers\": true\n                         \"matchBrackets\": true\n                         \"extraKeys\": {\"F11\": (lambda (_)\n                                                (cm.setOption \"fullScreen\" (not (cm.getOption \"fullScreen\"))))\n                                       \"Esc\": (lambda (_)\n                                                (cm.setOption \"fullScreen\" false))\n                                       \"Cmd-S\": (lambda (_) (save cm nodeUrn))}}}))))\n","c079f595404895d59e3c254247ea6bfb197bf2452bcafcfbf13300e0780a0e89":"(def edit\n  (block\n    (def save-node save)\n    (def save (lambda (cm nodeUrn)\n                (save-node nodeUrn (cm.getText))))\n    (lambda (nodeUrn)\n      (def text\n        (or (node nodeUrn)\n            \"\"))\n      (react\n         Editor\n           {\"value\": text\n            \"ref\": (lambda (cm)\n                     (def cli-fns {\"cm\": cm\n                                   \"paren-mode\": (lambda ()\n                                                    (cm.setMode \"paren\"))\n                                   \"indent-mode\": (lambda ()\n                                                    (cm.setMode \"indent\"))\n                                   \"save\": (lambda () (save cm nodeUrn))\n                                   \"done\": (lambda ()\n                                             (log context)\n                                             (unload context))})\n                    (def context (load cli-fns global)))\n             \"options\": {\"lineNumbers\": true\n                         \"matchBrackets\": true\n                         \"extraKeys\": {\"F11\": (lambda (_)\n                                                (cm.setOption \"fullScreen\" (not (cm.getOption \"fullScreen\"))))\n                                       \"Esc\": (lambda (_)\n                                                (cm.setOption \"fullScreen\" false))\n                                       \"Cmd-S\": (lambda (_) (save cm nodeUrn))}}}))))\n","11f7642f5659bbbb7200898e9b8c7efd6ff6aa9bd8d35615a5414183d4dff7fe":"(def import-lisp\n  (lambda! (node_urn)\n     (eval (node node_urn))))\n\n(def import-json\n  (lambda (urn)         \n    (def data (node urn))\n    (def definitions (unserialize data))\n    (load definitions global)))\n\n(def list-nodes\n  (lambda ()\n    (nodes \"robert\")))\n    \n(import-lisp \"startup-script-edit\")\n","706394d5d683896a39c5aa7dc7bdb17cb2c4b5eb19f480c8f91e272b16288c62":"# Features\n\n1. Split up startup-script into other nodes.\n\n# Bugs\n\n1. Saving an Editor uses the correct node urn but the wrong text. The text saved is the text of the most recent Editor instance."}